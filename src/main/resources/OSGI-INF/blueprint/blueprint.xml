<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

  <!-- OSGI blueprint property placeholder -->
  <cm:property-placeholder id="islandora-fc3indexer-properties" persistent-id="ca.umanitoba.dam.islandora.fc3indexer" update-strategy="reload" >
    <cm:default-properties>
      <cm:property name="xslt.path" value=""/>
      <cm:property name="error.maxRedeliveries" value="3"/>

      <cm:property name="jms.brokerUrl" value="tcp://127.0.0.1:61616" />
      <cm:property name="jms.username" value=""/>
      <cm:property name="jms.password" value=""/>
      <cm:property name="jms.processes" value="1"/>

      <cm:property name="queue.incoming" value="activemq:queue:fedora_update"/>
      <cm:property name="queue.internal" value="activemq:queue:internalIndex"/>
      <cm:property name="queue.dead-letter" value="activemq:topic:trash"/>
      
      <cm:property name="concurrent.processes" value="1"/>
      
      <cm:property name="fcrepo.baseUrl" value="http://localhost:8080"/>
      <cm:property name="fcrepo.basePath" value="/fedora"/>
      <cm:property name="fcrepo.authUser" value="fedoraAdmin"/>
      <cm:property name="fcrepo.authPassword" value=""/>
      
      <!-- The below uses the solr component @see http://camel.apache.org/solr.html -->
      <cm:property name="solr.baseUrl" value="solr://localhost:8080/solr"/>
      
      <!--  How long to wait before closing an aggregation of events in milliseconds. -->
      <cm:property name="completion.timeout" value="10000"/>
      
      <!-- Port to open the reindexing endpoint -->
      <cm:property name="reindexer.port" value="9111"/>
      
    </cm:default-properties>
  </cm:property-placeholder>

  <bean id="xsltTransformer" class="org.apache.xalan.processor.TransformerFactoryImpl"/>

  <bean id="indexerJmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="${jms.brokerUrl}"/>
    <property name="userName" value="${jms.username}"/>
    <property name="password" value="${jms.password}"/>
  </bean>

  <bean id="indexerPooledConnectionFactory"
     class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
    <property name="maxConnections" value="20" />
    <property name="connectionFactory" ref="indexerJmsConnectionFactory" />
  </bean>

  <bean id="indexerJmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="indexerPooledConnectionFactory"/>
    <property name="concurrentConsumers" value="${jms.processes}"/>
  </bean>

  <bean id="activemq-index" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="indexerJmsConfig"/>
    <!-- <property name="connectionFactory" ref="jmsConnectionFactory"/>-->
  </bean>

  <!-- to setup camel servlet with OSGi HttpService -->
  <reference id="httpService" interface="org.osgi.service.http.HttpService"/>

  <bean class="org.apache.camel.component.servlet.osgi.OsgiServletRegisterer"
        init-method="register"
        destroy-method="unregister">
    <property name="alias" value="/fedora3-solr-indexer"/>
    <property name="httpService" ref="httpService"/>
    <property name="servlet" ref="camelServlet"/>
  </bean>

  <bean id="camelServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet"/>

  <camelContext id="UmlFedora3SolrIndexer" xmlns="http://camel.apache.org/schema/blueprint" streamCache="true">
    <package>ca.umanitoba.dam.islandora.fc3indexer</package>
    <restConfiguration component="servlet" bindingMode="json" contextPath="/fedora3-solr-indexer"
                       port="${reindexer.port}">
      <dataFormatProperty key="prettyPrint" value="true"/>
    </restConfiguration>
    <rest path="/reindex">
      <get uri="/{id}">
        <description>Force reindex</description>
        <to uri="direct:restToReindex"/>
	  </get>
	</rest>
    
  </camelContext>
</blueprint>
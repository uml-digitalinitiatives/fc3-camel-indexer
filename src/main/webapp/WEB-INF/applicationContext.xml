<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
 
   <bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
      <property name="location" value="classpath:application.properties"/>
    </bean>
 
    <bean id="activemq"
      class="org.apache.activemq.camel.component.ActiveMQComponent">
      <property name="requestTimeout" value="2" />
      <property name="testConnectionOnStartup" value="true" />
      <property name="brokerURL" value="${activemq.brokerUrl}"/>
   </bean>

  <bean id="myLogger" class="org.slf4j.LoggerFactory" factory-method="getLogger">
      <constructor-arg value="ca.umanitoba.fc3indexer"/>
  </bean>
  
  <bean id="latestAggregation" class="org.apache.camel.processor.aggregate.UseLatestAggregationStrategy"/>
 
    <camelContext id="fedora3-solr-indexer" xmlns="http://camel.apache.org/schema/spring"
      xmlns:foxml="info:fedora/fedora-system:def/foxml#">
 
     <route id="fedora-aggregator">
        <description>Fedora Message aggregator (10 sec inactivity timeout)</description>
        <from uri="activemq:{{activemq.queuename}}"/>
        <log message="Raw Fedora Object: ${header.pid}, method: ${header.methodName}" loggingLevel="DEBUG" loggerRef="myLogger"/>
        <!--  aggregration strategy -->
        <aggregate strategyRef="latestAggregation" completionTimeout="10000">
            <correlationExpression>
              <simple>${header.pid}</simple>
            </correlationExpression>
            <log message="Aggregated Fedora Object: ${header.pid}, method: ${header.methodName}" loggingLevel="INFO" loggerRef="myLogger"/>
            <to uri="seda:aggregated"/>
        </aggregate>
      </route>
 
      <route id="fedora-routing">
        <description>Fedora message routing</description>
        <from uri="seda:aggregated"/>
        <choice>
            <when>
              <simple>${header.methodName} == 'purgeObject'</simple>
              <to uri="seda:fedora.delete"/>
            </when>
            <otherwise>
              <setHeader headerName="Exchange.HTTP_METHOD">
                  <constant>GET</constant>
              </setHeader>
              <setHeader headerName="Exchange.HTTP_PATH">
                  <simple>{{fcrepo.basePath}}/objects/$simple{header.pid}/objectXML</simple>
              </setHeader>
              <log message="Getting foxml ${header.pid}" loggingLevel="DEBUG" loggerRef="myLogger"/>
              <to uri="http4://{{fcrepo.baseUrl}}/?authUsername={{fcrepo.authUser}}&amp;authPassword={{fcrepo.authPassword}}"/>
              <convertBodyTo type="org.w3c.dom.Document"/>
              <to uri="log:?logger=myLogger&amp;level=TRACE"/>
              <to uri="seda:fedora.insert"/>
            </otherwise>
        </choice>
      </route>
 
      <route id="fedora-insert-multicaster">
        <description>Fedora Message insert multicaster</description>
        <from uri="seda:fedora.insert"/>
        <choice>
            <when>
              <xpath>/foxml:digitalObject/foxml:objectProperties/foxml:property[@NAME = 'info:fedora/fedora-system:def/model#state' and @VALUE = 'Active']</xpath>
              <to uri="seda:solr.update"/>
            </when>
            <otherwise>
              <to uri="seda:solr.delete"/>
            </otherwise>
        </choice>
      </route>
      
      <route id="fedora-delete-multicaster">
        <description>Fedora Message delete multicaster</description>
        <from uri="seda:fedora.delete"/>
        <!-- Not doing multicasting so pass to solr -->
        <to uri="seda:solr.delete"/>
      </route>
 
     <route id="solr-deletion">
        <description>Solr Deletion</description>
        <from uri="seda:solr.delete"/>
        <setHeader headerName="SolrOperation">
            <constant>DELETE_BY_ID</constant>
        </setHeader>
        <setBody>
            <simple>${header.pid}</simple>
        </setBody>
        <to uri="solr://{{solr.baseUrl}}"/>
        <log message="Removed ${header.pid} from Solr" loggingLevel="INFO" loggerRef="myLogger"/>
      </route>
 
      <route id="solr-insertion">
        <description>Solr Insertion</description>
        <from uri="seda:solr.update?blockWhenFull=true&amp;concurrentConsumers=5"/>
        
        <setHeader headerName="REPOSITORYNAME">
          <constant>fedora</constant>
        </setHeader>
        <setHeader headerName="FEDORAUSER">
          <simple>{{fcrepo.authUser}}</simple>
        </setHeader>
        <setHeader headerName="FEDORAPASS">
          <simple>{{fcrepo.authPassword}}</simple>
        </setHeader>
        <setHeader headerName="FEDORASOAP">
          <simple>http://{{fcrepo.baseUrl}}{{fcrepo.basePath}}/services</simple>
        </setHeader>
        <doTry>
          <to uri="xslt:{{foxmlXslt.path}}?transformerFactoryClass=org.apache.xalan.processor.TransformerFactoryImpl"/>
          <to uri="log:?logger=myLogger&amp;level=DEBUG"/>
          <setHeader headerName="SolrOperation">
              <constant>INSERT</constant>
          </setHeader>
          <to uri="solr://{{solr.baseUrl}}"/>
          <log message="Added/Updated ${header.pid} to Solr" loggingLevel="INFO" loggerRef="myLogger"/>
          <doCatch>
            <exception>javax.xml.transform.TransformerException</exception>
            <log message="XSLT error: ${exception.message}" loggingLevel="ERROR" loggerRef="myLogger"/>
          </doCatch>
        </doTry>
      </route>
  </camelContext>
 
</beans>
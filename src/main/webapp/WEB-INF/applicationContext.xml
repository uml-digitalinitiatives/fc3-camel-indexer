<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
 
 	<bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
    	<property name="location" value="classpath:application.properties"/>
  	</bean>
 
    <bean id="activemq"
      class="org.apache.activemq.camel.component.ActiveMQComponent">
      <property name="requestTimeout" value="2" />
      <property name="testConnectionOnStartup" value="true" />
      <property name="brokerURL" value="${activemq.brokerUrl}"/>
   </bean>

	<bean id="myLogger" class="org.slf4j.LoggerFactory" factory-method="getLogger">
    	<constructor-arg value="ca.umanitoba.fc3indexer"/>
	</bean>
	
	<bean id="latestAggregation" class="org.apache.camel.processor.aggregate.UseLatestAggregationStrategy"/>

	<bean id="stringConcatAggregation" class="ca.umanitoba.fc3indexer.StringConcatAggregator"/>
 
  	<camelContext id="fedora3-solr-indexer" xmlns="http://camel.apache.org/schema/spring"
  		xmlns:foxml="info:fedora/fedora-system:def/foxml#">
 
 		<route id="fedora-aggregator">
    		<description>Fedora Message aggregator (10 sec inactivity timeout)</description>
    		<from uri="activemq:{{activemq.queuename}}"/>
    		<log message="Raw Fedora Object: ${header.pid}, method: ${header.methodName}" loggingLevel="DEBUG" loggerRef="myLogger"/>
    		<aggregate strategyRef="latestAggregation" completionTimeout="10000">
      			<correlationExpression>
        			<simple>${header.pid}</simple>
      			</correlationExpression>
      			<log message="Aggregated Fedora Object: ${header.pid}, method: ${header.methodName}" loggingLevel="INFO" loggerRef="myLogger"/>
      			<to uri="seda:aggregated"/>
    		</aggregate>
  		</route>
 		
  		<route id="fedora-routing">
    		<description>Fedora message routing</description>
    		<from uri="seda:aggregated"/>
    		<choice>
      			<when>
        			<simple>${header.methodName} == 'purgeObject'</simple>
        			<to uri="seda:fedora.delete"/>
      			</when>
      			<otherwise>
        			<setHeader headerName="Exchange.HTTP_METHOD">
          				<constant>GET</constant>
        			</setHeader>
        			<setHeader headerName="Exchange.HTTP_PATH">
          				<simple>{{fcrepo.basePath}}/objects/$simple{header.pid}/objectXML</simple>
        			</setHeader>
        			<log message="Getting foxml ${header.pid}" loggingLevel="DEBUG" loggerRef="myLogger"/>
        			<to uri="http4://{{fcrepo.baseUrl}}/?authUsername={{fcrepo.authUser}}&amp;authPassword={{fcrepo.authPassword}}"/>
        			<convertBodyTo type="org.w3c.dom.Document"/>
          			<to uri="seda:fedora.insert"/>
      			</otherwise>
    		</choice>
  		</route>
 
  		<route id="fedora-insert-multicaster">
    		<description>Fedora Message insert multicaster</description>
    		<from uri="seda:fedora.insert"/>
    		<log message="aggregating ${header.pid}" loggingLevel="DEBUG" loggerRef="myLogger"/>
    		<choice>
      			<when>
        			<xpath>/foxml:digitalObject/foxml:objectProperties/foxml:property[@NAME = 'info:fedora/fedora-system:def/model#state' and @VALUE = 'Active']</xpath>
        			<setProperty propertyName="foxml"><simple>${body}</simple></setProperty>
        			<to uri="direct:fedora.properties"/>
        			<setProperty propertyName="solr"><simple>${body}</simple></setProperty>
        			<setBody><simple>${property.foxml}</simple></setBody>
        			
        			<split strategyRef="stringConcatAggregation">
        				<xpath>/foxml:digitalObject/foxml:datastream</xpath>
        				<to uri="direct:fedora.dsProcess"/>
        			</split>
        			<log message="Combined and ready" loggingLevel="TRACE" loggerRef="myLogger"/>
        			<!--  combine the object properties fields and the transformed datastreams, plus wrap in <doc> -->
        			<setBody><simple>&lt;update&gt;&lt;doc&gt;${property.solr}${body}&lt;/doc&gt;&lt;/update&gt;</simple></setBody>
        			<to uri="seda:solr.update"/>
      			</when>
      			<otherwise>
        			<to uri="seda:solr.delete"/>
      			</otherwise>
    		</choice>
  		</route>
  		
  		<route id="fedora-foxml-properties">
  			<description>Process the FOXML object properties to get some base Solr fields (including PID)</description>
  			<from uri="direct:fedora.properties"/>
  			<setBody><xpath>/foxml:digitalObject/foxml:objectProperties</xpath></setBody>
			<log message="Trying {{foxmlXslt.path}}/FOXML-properties.xslt for PID $simple{header.pid}" loggingLevel="DEBUG" loggerRef="myLogger"/>
			<to uri="xslt:{{foxmlXslt.path}}/FOXML-properties.xslt?transformerFactoryClass=org.apache.xalan.processor.TransformerFactoryImpl" />
  		</route>
  		
  		<route id="fedora-ds-process">
  			<description>Process the individual datastreams and return the Solr fields for their data.</description>
  			<from uri="direct:fedora.dsProcess"/>
  			
  			<choice>
  				<when>
  					<xpath>/foxml:datastream/foxml:datastreamVersion[last()][@MIMETYPE = 'text/xml' or @MIMETYPE = 'application/xml' or @MIMETYPE = 'application/rdf+xml' or @MIMETYPE = 'text/html']</xpath>
  			
		  			<setHeader headerName="DSID"><xpath resultType="java.lang.String">/foxml:datastream/@ID</xpath></setHeader>
		  			<doTry>
			  			<setHeader headerName="Exchange.HTTP_METHOD">
			          		<constant>GET</constant>
			        	</setHeader>
			        	<setHeader headerName="Exchange.HTTP_PATH">
			          		<simple>{{fcrepo.basePath}}/objects/$simple{header.pid}/datastreams/$simple{header.DSID}/content</simple>
			        	</setHeader>
			        	<log message="Getting datastream ${header.DSID} for ${header.pid}" loggingLevel="DEBUG" loggerRef="myLogger"/>
			  			<to uri="http4://{{fcrepo.baseUrl}}/?authUsername={{fcrepo.authUser}}&amp;authPassword={{fcrepo.authPassword}}"/>
			        	<convertBodyTo type="org.w3c.dom.Document"/>
			        	<to uri="log:?logger=myLogger&amp;level=TRACE"/>
			        	<doTry>
			        		<log message="Trying {{foxmlXslt.path}}/$simple{header.DSID}.xslt?" loggingLevel="DEBUG" loggerRef="myLogger"/>
			  				<recipientList>
			  					<simple>xslt:{{foxmlXslt.path}}/$simple{header.DSID}.xslt?transformerFactoryClass=org.apache.xalan.processor.TransformerFactoryImpl</simple>
			  				</recipientList>
				  			<doCatch>
				  				<exception>javax.xml.transform.TransformerException</exception>
			  					<exception>java.io.FileNotFoundException</exception>
			  					<log message="Exception trying to transform DSID ${header.DSID} on ${header.pid}, possibly there is no stylesheet ${header.DSID}.xslt" loggingLevel="INFO" loggerRef="myLogger"/>
			  					<setBody><constant></constant></setBody>
		  					</doCatch>
		  					<doFinally>
		  						<to uri="log:?logger=myLogger&amp;level=TRACE"/>
		  					</doFinally>
		  				</doTry>
		  				<doCatch>
		  					<exception>org.apache.camel.component.http4.HttpOperationFailedException</exception>
		  					<log message="Exception getting datastream ${header.DSID} from object ${header.pid} -- skipping" loggingLevel="INFO" loggerRef="myLogger"/>
		  					<setBody><constant></constant></setBody>
		  				</doCatch>
		  			</doTry>
	  			</when>
	  			<otherwise>
	  				<!-- Not an XML datastream, so we return nothing -->
	  				<setBody><constant></constant></setBody>
	  			</otherwise>
  			</choice>
  			
  		</route>
  		
  		<route id="fedora-delete-multicaster">
  			<description>Fedora Message delete multicaster</description>
  			<from uri="seda:fedora.delete"/>
  			<!-- Not doing multicasting so pass to solr -->
  			<to uri="seda:solr.delete"/>
  		</route>
 
 		<route id="solr-deletion">
    		<description>Solr Deletion</description>
    		<from uri="seda:solr.delete"/>
    		<setHeader headerName="SolrOperation">
      			<constant>DELETE_BY_ID</constant>
    		</setHeader>
    		<setBody>
      			<simple>${header.pid}</simple>
    		</setBody>
    		<to uri="solr://{{solr.baseUrl}}"/>
    		<log message="Removed ${header.pid} from Solr" loggingLevel="INFO" loggerRef="myLogger"/>
  		</route>
 
  		<route id="solr-insertion">
    		<description>Solr Insertion</description>
    		<from uri="seda:solr.update?blockWhenFull=true&amp;concurrentConsumers=5"/>
    		
    		<to uri="log:?logger=myLogger&amp;level=TRACE"/>
    		<setHeader headerName="SolrOperation">
      			<constant>INSERT</constant>
    		</setHeader>
    		<to uri="solr://{{solr.baseUrl}}"/>
    		<log message="Added/Updated ${header.pid} to Solr" loggingLevel="INFO" loggerRef="myLogger"/>
  		</route>
  </camelContext>
 
</beans>